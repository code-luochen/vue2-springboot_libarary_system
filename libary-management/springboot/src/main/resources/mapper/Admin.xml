<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.AdminMapper"><!--这里的namespace写的是你的mapper所对应的文件位置-->
    <!--id就是mapper中方法的名字--><!--resultType数据是查询出来的类对象-->
    <select id="list" resultType="com.example.springboot.entity.Admin">
        select * from admin order by id desc
    </select>
    <select id="listByCondition" resultType="com.example.springboot.entity.Admin">
        select * from admin
        <where>
            <if test="username !=null and username != '' ">
                username like concat('%',#{username},'%')
            </if>
            <if test="phone !=null and phone != '' ">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="email !=null and email != '' ">
                and email like concat('%',#{email},'%')
            </if>
        </where>
        order by id desc
    </select>
    <!--根据id查询-->
    <select id="getById" resultType="com.example.springboot.entity.Admin">
        select * from admin where id=#{id}
    </select>
    <!--管理员登录的查询-->
    <select id="getByUsernameandPassword" resultType="com.example.springboot.entity.Admin">
        select * from admin where username=#{username} and password = #{password}
    </select>
    <!--登录时查询出一个唯一的用户信息-->
    <select id="getByUsername" resultType="com.example.springboot.entity.Admin">
        select * from admin where username=#{username}
    </select>
    <!--添加用户-->
    <insert id="save">
        insert into admin(username,password,phone,email)
        value(#{username},#{password},#{phone},#{email})
    </insert>
    <!--更新数据-->
    <update id="updateById">
        update admin set username=#{username},phone=#{phone},email=#{email},updatetime=#{updatetime},status=#{status} where id =#{id}
    </update>
    <!--更新密码-->
    <update id="updtatePassword">
        update admin set password=#{newPass} where username=#{username} and password = #{password}
    </update>

    <!--根据id删除数据-->
    <delete id="deleteById">
        delete from admin where id= #{id}

    </delete>

</mapper>